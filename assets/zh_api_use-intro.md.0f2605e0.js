import{_ as s,o as n,c as a,a as l}from"./app.e9cec840.js";const d=JSON.parse('{"title":"组合式 API","description":"","frontmatter":{"title":"组合式 API","lang":"zh"},"headers":[{"level":2,"title":"安装","slug":"安装","link":"#安装","children":[]},{"level":2,"title":"示例","slug":"示例","link":"#示例","children":[]}],"relativePath":"zh/api/use-intro.md"}'),o={name:"zh/api/use-intro.md"},p=l(`<h1 id="组合式-api-介绍" tabindex="-1">组合式 API 介绍 <a class="header-anchor" href="#组合式-api-介绍" aria-hidden="true">#</a></h1><p>Ryxon 底层依赖了 <code>@ryxon/use</code> 包，其中内置了一系列的组合式 API。对于使用了 Ryxon 的项目，可以复用这些 API 进行开发。</p><h2 id="安装" tabindex="-1">安装 <a class="header-anchor" href="#安装" aria-hidden="true">#</a></h2><p>虽然 Ryxon 的依赖中已经包含了 <code>@ryxon/use</code>，但我们仍然推荐显式地安装它：</p><div class="language-shell"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki material-palenight"><code><span class="line"><span style="color:#676E95;font-style:italic;"># with npm</span></span>
<span class="line"><span style="color:#FFCB6B;">npm</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">i</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">@ryxon/use</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># with yarn</span></span>
<span class="line"><span style="color:#FFCB6B;">yarn</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">add</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">@ryxon/use</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># with pnpm</span></span>
<span class="line"><span style="color:#FFCB6B;">pnpm</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">add</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">@ryxon/use</span></span>
<span class="line"></span></code></pre></div><h2 id="示例" tabindex="-1">示例 <a class="header-anchor" href="#示例" aria-hidden="true">#</a></h2><p>下面是一个 Ryxon 组合式 API 的用法示例，我们从 <code>@ryxon/use</code> 这个包中引入 <code>useWindowSize</code> 方法，然后进行调用，即可获取到当前 Window 的宽度和高度。</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-palenight"><code><span class="line"><span style="color:#89DDFF;font-style:italic;">import</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">useWindowSize</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;font-style:italic;">from</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">@ryxon/use</span><span style="color:#89DDFF;">&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span><span style="color:#A6ACCD;"> width</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> height </span><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">useWindowSize</span><span style="color:#A6ACCD;">()</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#A6ACCD;">(width</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">value) </span><span style="color:#676E95;font-style:italic;">// -&gt; 窗口宽度</span></span>
<span class="line"><span style="color:#A6ACCD;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#A6ACCD;">(height</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">value) </span><span style="color:#676E95;font-style:italic;">// -&gt; 窗口高度</span></span>
<span class="line"></span></code></pre></div>`,8),e=[p];function t(c,r,i,y,C,A){return n(),a("div",null,e)}const h=s(o,[["render",t]]);export{d as __pageData,h as default};
