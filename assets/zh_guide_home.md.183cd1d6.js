import{_ as s,o,a,Q as e}from"./chunks/framework.cdac4cfc.js";const u=JSON.parse('{"title":"介绍","description":"","frontmatter":{"title":"介绍","lang":"zh"},"headers":[],"relativePath":"zh/guide/home.md","filePath":"zh/guide/home.md"}'),n={name:"zh/guide/home.md"},p=e(`<h1 id="介绍" tabindex="-1">介绍 <a class="header-anchor" href="#介绍" aria-label="Permalink to &quot;介绍&quot;">​</a></h1><p>Ryxon 是一个<strong>轻量、可定制的组件库</strong></p><p>Ryxon 支持了<strong>深色模式</strong></p><h2 id="支持深色模式" tabindex="-1">支持深色模式 <a class="header-anchor" href="#支持深色模式" aria-label="Permalink to &quot;支持深色模式&quot;">​</a></h2><p><strong>Ryxon 支持切换所有组件为深色模式。</strong></p><p>只需要把 <a href="/ryxon/zh/component/config-provider.html">ConfigProvider 组件</a>的 <code>theme</code> 属性设置为 <code>dark</code>，即可切换为深色模式，将页面上的所有 Ryxon 组件变成深色风格。</p><div class="language-html vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">&lt;</span><span style="color:#85E89D;">r-config-provider</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">theme</span><span style="color:#E1E4E8;">=</span><span style="color:#9ECBFF;">&quot;dark&quot;</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#6A737D;">&lt;!-- child components --&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">&lt;/</span><span style="color:#85E89D;">r-config-provider</span><span style="color:#E1E4E8;">&gt;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">&lt;</span><span style="color:#22863A;">r-config-provider</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">theme</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;dark&quot;</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6A737D;">&lt;!-- child components --&gt;</span></span>
<span class="line"><span style="color:#24292E;">&lt;/</span><span style="color:#22863A;">r-config-provider</span><span style="color:#24292E;">&gt;</span></span></code></pre></div><p>Ryxon 文档也已支持切换为深色模式。</p><h2 id="按需引入方式" tabindex="-1">按需引入方式 <a class="header-anchor" href="#按需引入方式" aria-label="Permalink to &quot;按需引入方式&quot;">​</a></h2><p><strong>Ryxon 不再使用 babel-plugin-import 实现按需引入。</strong></p><p>在早期，组件库大多使用 <code>babel-plugin-import</code> 实现按需引入，这意味着组件库会强依赖 Babel 编译。从 Ryxon 开始，将不再支持 <code>babel-plugin-import</code>，主要带来以下收益：</p><ul><li><p>不再强依赖 Babel 编译，项目可以使用 SWC、esbuild 等现代编译工具，进而提升编译效率。</p></li><li><p>不再受到 <code>babel-plugin-import</code> 的 import 限制，可以从 Ryxon 中导入除组件以外的内容，比如 Ryxon 中新增的 <code>showMessage</code> 方法，或是 <code>buttonProps</code> 对象：</p></li></ul><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> { showMessage, buttonProps } </span><span style="color:#F97583;">from</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;ryxon&#39;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">import</span><span style="color:#24292E;"> { showMessage, buttonProps } </span><span style="color:#D73A49;">from</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;ryxon&#39;</span></span></code></pre></div><p>在包体积方面，移除 <code>babel-plugin-import</code> 对项目的 JS 体积不会有影响，因为 Ryxon 默认支持通过 Tree Shaking 来移除不需要的 JS 代码，而 CSS 代码可以通过 <a href="https://github.com/antfu/unplugin-vue-components" target="_blank" rel="noreferrer">unplugin-vue-components</a> 插件实现按需引入，详细用法请参考 <a href="/ryxon/zh/guide/quickstart.html#按需引入">「快速开始」</a>。</p>`,14),t=[p];function l(r,c,i,d,h,g){return o(),a("div",null,t)}const E=s(n,[["render",l]]);export{u as __pageData,E as default};
